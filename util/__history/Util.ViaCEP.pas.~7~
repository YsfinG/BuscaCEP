unit Util.ViaCEP;

interface

type
   TEndereco = record
      Logradouro: String;
      Complemento: String;
      Bairro: String;
      Localidade: String;
      UF: String;
      Unidade: String;
      IBGE: String;
      GIA: String;
   end;

   TViaCEPUtil = class
   public
      class function GetEndereco(pCEP: String): TEndereco;
   end;

implementation

uses
   System.Classes, System.SysUtils;

{ TViaCEPUtil }

class function TViaCEPUtil.GetEndereco(pCEP: String): TEndereco;
var
   xHTTP: TIdHTTP;
   xIDSSLHandler: TIdSSLIOHandlerSocketOpenSSL;
   xResponse: TStringStream;
   xObjJson: TJSONObject;
begin
   xHTTP := TIdHTTP.Create;
   xIDSSLHandler := TIdSSLIOHandlerSocketOpenSSL.Create;

   try
      xHTTP.IOHandler := xIDSSLHandler;
      xResponse := TStringStream.Create;
      xHTTP.Get('https://viacep.com.br/ws/' + pCEP + '/json', xResponse);

      if (xHTTP.ResponseCode = 200) and
         (not (Utf8ToAnsi(xResponse.DataString) = '{'#$A'  "erro": true'#$A'}')) then
         Result :=
            TJSONObject(
               TJSONObject.ParseJSONValue(
                  TEncoding.ASCII.GetBytes(Utf8ToAnsi(xResponse.DataString)), 0));
   finally
      FreeAndNil(xHTTP);
      FreeAndNil(xIDSSLHandler);
      xResponse.Destroy;
   end;
end;

end.
